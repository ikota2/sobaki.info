{"ast":null,"code":"import api from \"./ScheduleApi\";\n\nclass ScheduleStore {\n  constructor() {\n    this.scheduleValues = {\n      from: '',\n      to: '',\n      direction: '' // date: null,\n\n    };\n    this.schedules = [];\n    this.status = 'idle';\n  }\n\n  setScheduleValues(values) {\n    this.scheduleValues = values;\n  }\n\n  setSchedules(values) {\n    this.schedules = values;\n  }\n\n  setStatus(status) {\n    this.status = status;\n  }\n\n  async getSchedules() {\n    try {\n      const data = await api.getSchedules();\n\n      if (data.length > 0) {\n        this.setSchedules(data);\n        console.log(data);\n        this.setStatus('loaded');\n      } else if (data.length === 0) {\n        this.setStatus('emptyData');\n      }\n    } catch (e) {\n      console.error(e);\n      this.setStatus('error');\n    }\n  }\n\n}\n\nexport default new ScheduleStore();","map":{"version":3,"names":["api","ScheduleStore","scheduleValues","from","to","direction","schedules","status","setScheduleValues","values","setSchedules","setStatus","getSchedules","data","length","console","log","e","error"],"sources":["/Users/alligator/Documents/education/projects/sobaki-tesst2/src/features/Schedule/ScheduleStore.ts"],"sourcesContent":["import api from \"./ScheduleApi\";\n\ninterface Values {\n  from: string;\n  to: string;\n  direction: string;\n  // date?: Date | null;\n}\n\ntype Statuses = 'idle' | 'loading' | 'error' | 'loaded' | 'emptyData';\n\n\nclass ScheduleStore {\n  scheduleValues: Values = {\n    from: '',\n    to: '',\n    direction: '',\n    // date: null,\n  }\n  \n  schedules = [];\n\n  status: Statuses = 'idle';\n\n  setScheduleValues(values: Values) {\n    this.scheduleValues = values;\n  }\n\n  setSchedules(values: any) {\n    this.schedules = values;\n  }\n\n  setStatus(status: Statuses) {\n    this.status = status;\n  }\n\n  async getSchedules() {\n    try {\n      const data = await api.getSchedules();\n\n      if (data.length > 0) {\n        this.setSchedules(data);\n        console.log(data);\n        this.setStatus('loaded');\n      } else if (data.length === 0) {\n        this.setStatus('emptyData');\n      }\n    }\n    catch(e) {\n      console.error(e);\n      this.setStatus('error');\n    }\n  }\n}\n\nexport default new ScheduleStore();"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,eAAhB;;AAYA,MAAMC,aAAN,CAAoB;EAAA;IAAA,KAClBC,cADkB,GACO;MACvBC,IAAI,EAAE,EADiB;MAEvBC,EAAE,EAAE,EAFmB;MAGvBC,SAAS,EAAE,EAHY,CAIvB;;IAJuB,CADP;IAAA,KAQlBC,SARkB,GAQN,EARM;IAAA,KAUlBC,MAVkB,GAUC,MAVD;EAAA;;EAYlBC,iBAAiB,CAACC,MAAD,EAAiB;IAChC,KAAKP,cAAL,GAAsBO,MAAtB;EACD;;EAEDC,YAAY,CAACD,MAAD,EAAc;IACxB,KAAKH,SAAL,GAAiBG,MAAjB;EACD;;EAEDE,SAAS,CAACJ,MAAD,EAAmB;IAC1B,KAAKA,MAAL,GAAcA,MAAd;EACD;;EAEiB,MAAZK,YAAY,GAAG;IACnB,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMb,GAAG,CAACY,YAAJ,EAAnB;;MAEA,IAAIC,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;QACnB,KAAKJ,YAAL,CAAkBG,IAAlB;QACAE,OAAO,CAACC,GAAR,CAAYH,IAAZ;QACA,KAAKF,SAAL,CAAe,QAAf;MACD,CAJD,MAIO,IAAIE,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;QAC5B,KAAKH,SAAL,CAAe,WAAf;MACD;IACF,CAVD,CAWA,OAAMM,CAAN,EAAS;MACPF,OAAO,CAACG,KAAR,CAAcD,CAAd;MACA,KAAKN,SAAL,CAAe,OAAf;IACD;EACF;;AAxCiB;;AA2CpB,eAAe,IAAIV,aAAJ,EAAf"},"metadata":{},"sourceType":"module"}