{"ast":null,"code":"var _jsxFileName = \"/Users/alligator/Documents/education/projects/sobaki-tesst2/src/features/Finder/Finder.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Field, Form } from 'formik';\nimport classes from './Finder.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Finder = _ref => {\n  _s();\n\n  let {\n    setParams,\n    allStations\n  } = _ref;\n  const [swap, setSwap] = useState(false); // console.log('finder');\n\n  const titles = allStations === null || allStations === void 0 ? void 0 : allStations.map(_ref2 => {\n    let {\n      stations\n    } = _ref2;\n    return stations.map(_ref3 => {\n      let {\n        title\n      } = _ref3;\n      return title;\n    });\n  }).flat();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        from: '',\n        to: ''\n      },\n      onSubmit: (values, _ref4) => {\n        let {\n          setSubmitting\n        } = _ref4;\n\n        // if (!swap) {\n        //   setParams({\n        //     from: findYaCode(capitalize(values.from), stations),\n        //     to: findYaCode(capitalize(values.to), stations)});\n        // }\n        // if (swap) {\n        //   setParams({\n        //     from: findYaCode(capitalize(values.to), stations),\n        //     to: findYaCode(capitalize(values.from), stations)\n        //   });\n        // }\n        if (!swap && setParams) {\n          setParams({\n            from: values.from,\n            to: values.to\n          });\n        }\n\n        if (swap && setParams) {\n          setParams({\n            from: values.to,\n            to: values.from\n          });\n        }\n\n        setSubmitting(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          id: !swap ? 'from' : 'to',\n          name: !swap ? 'from' : 'to',\n          placeholder: \"\\u041E\\u0442\\u043A\\u0443\\u0434\\u0430\",\n          list: \"megalist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"megalist\",\n          children: titles.map(title => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 36\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setSwap(!swap),\n          className: classes.swap,\n          \"data-testid\": \"swapper\",\n          children: \"\\u21C4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: swap ? 'from' : 'to',\n          name: swap ? 'from' : 'to',\n          placeholder: \"\\u041A\\u0443\\u0434\\u0430\",\n          list: \"megalist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          \"data-testid\": \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Finder, \"+X2UFtxOAEJcrBEQghVnqSbRNWs=\");\n\n_c = Finder;\nexport default Finder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Finder\");","map":{"version":3,"names":["React","useState","Formik","Field","Form","classes","Finder","setParams","allStations","swap","setSwap","titles","map","stations","title","flat","from","to","values","setSubmitting"],"sources":["/Users/alligator/Documents/education/projects/sobaki-tesst2/src/features/Finder/Finder.tsx"],"sourcesContent":["import React, {FC, useState} from \"react\"\nimport { Formik, Field, Form, FormikHelpers } from 'formik';\n\nimport classes from './Finder.module.scss';\nimport {AllStations} from \"../../types\";\n\nexport interface Values {\n  from: string;\n  to: string;\n}\n\ninterface Props {\n  setParams?: React.Dispatch<React.SetStateAction<Values>>;\n  allStations: AllStations[];\n}\n\nconst Finder: FC<Props> = ({setParams, allStations}) => {\n  const [swap, setSwap] = useState(false);\n\n // console.log('finder');\n  const titles: string[] = allStations?.map(({stations}) => stations.map(({title}) => title)).flat();\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          from: '',\n          to: '',\n        }}\n        onSubmit={( values: Values, { setSubmitting }: FormikHelpers<Values>) => {\n          // if (!swap) {\n          //   setParams({\n          //     from: findYaCode(capitalize(values.from), stations),\n          //     to: findYaCode(capitalize(values.to), stations)});\n          // }\n          // if (swap) {\n          //   setParams({\n          //     from: findYaCode(capitalize(values.to), stations),\n          //     to: findYaCode(capitalize(values.from), stations)\n          //   });\n          // }\n          if (!swap && setParams) {\n            setParams({\n              from: values.from,\n              to: values.to\n            });\n          }\n          if (swap && setParams) {\n            setParams({\n              from: values.to,\n              to: values.from\n            });\n          }\n          setSubmitting(false);\n        }}\n      >\n        <Form>\n          <Field id={!swap ? 'from' : 'to'} name={!swap ? 'from' : 'to'} placeholder=\"Откуда\" list=\"megalist\" />\n          <datalist id=\"megalist\">\n            {titles.map((title) => <option value={title} />)}\n          </datalist>\n          <button\n            type=\"button\"\n            onClick={() => setSwap(!swap)}\n            className={classes.swap}\n            data-testid=\"swapper\"\n          >⇄</button>\n\n          <Field id={swap ? 'from' : 'to'} name={swap ? 'from' : 'to'} placeholder=\"Куда\" list=\"megalist\"/>\n\n          <button type=\"submit\" data-testid=\"submit\">Submit</button>\n        </Form>\n      </Formik>\n    </>\n  )\n}\n\nexport default Finder\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAmD,QAAnD;AAEA,OAAOC,OAAP,MAAoB,sBAApB;;;;AAaA,MAAMC,MAAiB,GAAG,QAA8B;EAAA;;EAAA,IAA7B;IAACC,SAAD;IAAYC;EAAZ,CAA6B;EACtD,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC,CADsD,CAGvD;;EACC,MAAMU,MAAgB,GAAGH,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEI,GAAb,CAAiB;IAAA,IAAC;MAACC;IAAD,CAAD;IAAA,OAAgBA,QAAQ,CAACD,GAAT,CAAa;MAAA,IAAC;QAACE;MAAD,CAAD;MAAA,OAAaA,KAAb;IAAA,CAAb,CAAhB;EAAA,CAAjB,EAAmEC,IAAnE,EAAzB;EAEA,oBACE;IAAA,uBACE,QAAC,MAAD;MACE,aAAa,EAAE;QACbC,IAAI,EAAE,EADO;QAEbC,EAAE,EAAE;MAFS,CADjB;MAKE,QAAQ,EAAE,CAAEC,MAAF,YAA+D;QAAA,IAA7C;UAAEC;QAAF,CAA6C;;QACvE;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,IAAI,CAACV,IAAD,IAASF,SAAb,EAAwB;UACtBA,SAAS,CAAC;YACRS,IAAI,EAAEE,MAAM,CAACF,IADL;YAERC,EAAE,EAAEC,MAAM,CAACD;UAFH,CAAD,CAAT;QAID;;QACD,IAAIR,IAAI,IAAIF,SAAZ,EAAuB;UACrBA,SAAS,CAAC;YACRS,IAAI,EAAEE,MAAM,CAACD,EADL;YAERA,EAAE,EAAEC,MAAM,CAACF;UAFH,CAAD,CAAT;QAID;;QACDG,aAAa,CAAC,KAAD,CAAb;MACD,CA9BH;MAAA,uBAgCE,QAAC,IAAD;QAAA,wBACE,QAAC,KAAD;UAAO,EAAE,EAAE,CAACV,IAAD,GAAQ,MAAR,GAAiB,IAA5B;UAAkC,IAAI,EAAE,CAACA,IAAD,GAAQ,MAAR,GAAiB,IAAzD;UAA+D,WAAW,EAAC,sCAA3E;UAAoF,IAAI,EAAC;QAAzF;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAU,EAAE,EAAC,UAAb;UAAA,UACGE,MAAM,CAACC,GAAP,CAAYE,KAAD,iBAAW;YAAQ,KAAK,EAAEA;UAAf;YAAA;YAAA;YAAA;UAAA,QAAtB;QADH;UAAA;UAAA;UAAA;QAAA,QAFF,eAKE;UACE,IAAI,EAAC,QADP;UAEE,OAAO,EAAE,MAAMJ,OAAO,CAAC,CAACD,IAAF,CAFxB;UAGE,SAAS,EAAEJ,OAAO,CAACI,IAHrB;UAIE,eAAY,SAJd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALF,eAYE,QAAC,KAAD;UAAO,EAAE,EAAEA,IAAI,GAAG,MAAH,GAAY,IAA3B;UAAiC,IAAI,EAAEA,IAAI,GAAG,MAAH,GAAY,IAAvD;UAA6D,WAAW,EAAC,0BAAzE;UAAgF,IAAI,EAAC;QAArF;UAAA;UAAA;UAAA;QAAA,QAZF,eAcE;UAAQ,IAAI,EAAC,QAAb;UAAsB,eAAY,QAAlC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAdF;MAAA;QAAA;QAAA;QAAA;MAAA;IAhCF;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAqDD,CA3DD;;GAAMH,M;;KAAAA,M;AA6DN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}