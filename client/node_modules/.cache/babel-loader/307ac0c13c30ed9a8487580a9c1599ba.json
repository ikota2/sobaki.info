{"ast":null,"code":"import moment from \"moment\";\nexport const separatePastAndFuture = arr => {\n  const now = moment();\n  const past = [];\n  const future = [];\n\n  for (let i = 0; i <= arr.length; i++) {\n    console.log(new Date(arr[i].departure));\n  } // \tif (now > moment(new Date(arr[i].departure))) {\n  // \t\tpast.push(arr[i])\n  // \t} else if (now < moment(new Date(arr[i].departure))) {\n  // \t\tfuture.push(arr[i])\n  // \t}\n  // }\n\n\n  return {\n    past: [],\n    future: []\n  };\n};","map":{"version":3,"names":["moment","separatePastAndFuture","arr","now","past","future","i","length","console","log","Date","departure"],"sources":["/Users/alligator/Documents/education/projects/sobaki-tesst2/src/helpers/separatePastAndFuture.ts"],"sourcesContent":["import moment from \"moment\";\n\nimport {Segment} from \"../types\";\n\nexport const separatePastAndFuture = (arr: Segment[]) => {\n\tconst now = moment();\n\tconst past = [];\n\tconst future = [];\n\n\tfor (let i = 0; i <= arr.length; i++) {\n\t\tconsole.log(new Date(arr[i].departure));\n\t}\n\t// \tif (now > moment(new Date(arr[i].departure))) {\n\t// \t\tpast.push(arr[i])\n\t// \t} else if (now < moment(new Date(arr[i].departure))) {\n\t// \t\tfuture.push(arr[i])\n\t// \t}\n\t// }\n\n\treturn {past: [], future: []};\n}\n"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAIA,OAAO,MAAMC,qBAAqB,GAAIC,GAAD,IAAoB;EACxD,MAAMC,GAAG,GAAGH,MAAM,EAAlB;EACA,MAAMI,IAAI,GAAG,EAAb;EACA,MAAMC,MAAM,GAAG,EAAf;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,GAAG,CAACK,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;IACrCE,OAAO,CAACC,GAAR,CAAY,IAAIC,IAAJ,CAASR,GAAG,CAACI,CAAD,CAAH,CAAOK,SAAhB,CAAZ;EACA,CAPuD,CAQxD;EACA;EACA;EACA;EACA;EACA;;;EAEA,OAAO;IAACP,IAAI,EAAE,EAAP;IAAWC,MAAM,EAAE;EAAnB,CAAP;AACA,CAhBM"},"metadata":{},"sourceType":"module"}