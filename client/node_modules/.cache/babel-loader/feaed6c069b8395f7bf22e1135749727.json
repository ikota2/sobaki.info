{"ast":null,"code":"var _jsxFileName = \"/Users/alligator/Documents/education/projects/sobaki-tesst2/src/features/Schedule/Schedule.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState } from \"react\";\nimport Flight from \"../../components/Flight/Flight\";\nimport Dog from '../../components/Dog/Dog';\nimport { separatePastAndFuture } from \"../../helpers/separatePastAndFuture\";\nimport { today } from \"../../constants/dates\"; //   https://api.rasp.yandex.net/v3.0/search/?apikey=b4bb1709-f368-422c-9466-87821be7f87c&format=json&from=s9600871&to=s9602460&lang=ru_RU&page=1&date=2022-09-04\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Schedule = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(_ref => {\n  _s();\n\n  let {\n    schedule,\n    currentDate\n  } = _ref;\n  // const [pastAndFuture, setPastAndFuture] = useState<{past: Segment[], future: Segment[]}>({past: [], future: []})\n  const [showPast, setShowPast] = useState(false);\n\n  if (schedule === undefined || Object.values(schedule).length === 0) {\n    return /*#__PURE__*/_jsxDEV(Dog, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  } // if (scheduleStatus === 'loading') {\n  //   return <Dog />;\n  // }\n  // todo почитать что не может быть стейтом))\n  // console.log({schedule})\n\n\n  const {\n    date,\n    from,\n    to\n  } = schedule.search;\n  const {\n    segments\n  } = schedule;\n  const {\n    past,\n    future\n  } = separatePastAndFuture(segments); //???? const options: {year: string, month: string, day: string} = { year: 'numeric', month: 'long', day: 'numeric' }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u041E\\u0442\\u043A\\u0443\\u0434\\u0430: \", from.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u041A\\u0443\\u0434\\u0430: \", to.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u041A\\u043E\\u0433\\u0434\\u0430: \", new Date(date).toLocaleDateString('ru-RU', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), showPast && past.map((segment, i) => {\n      var _segment$tickets_info;\n\n      return /*#__PURE__*/_jsxDEV(Flight, {\n        stops: segment.stops,\n        arrival: segment.arrival,\n        departure: segment.departure,\n        duration: segment.duration,\n        title: segment.thread.short_title,\n        subtype: segment.thread.transport_subtype.title,\n        price: (_segment$tickets_info = segment.tickets_info) === null || _segment$tickets_info === void 0 ? void 0 : _segment$tickets_info.places[0].price.whole\n      }, i + \"\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this);\n    }), currentDate === today && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => setShowPast(!showPast),\n      children: !showPast ? 'Показать ушедние собаки' : 'Скрыть ушедшие собаки'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 33\n    }, this), future.map((segment, i) => {\n      var _segment$tickets_info2;\n\n      return /*#__PURE__*/_jsxDEV(Flight, {\n        stops: segment.stops,\n        arrival: segment.arrival,\n        departure: segment.departure,\n        duration: segment.duration,\n        title: segment.thread.short_title,\n        subtype: segment.thread.transport_subtype.title,\n        price: (_segment$tickets_info2 = segment.tickets_info) === null || _segment$tickets_info2 === void 0 ? void 0 : _segment$tickets_info2.places[0].price.whole\n      }, i + \"\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true);\n}, \"ypf2Ym/pbMwgA8smGy+ezuxO6uQ=\")), \"ypf2Ym/pbMwgA8smGy+ezuxO6uQ=\");\n\n_c2 = Schedule;\nexport default Schedule;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Schedule$memo\");\n$RefreshReg$(_c2, \"Schedule\");","map":{"version":3,"names":["React","memo","useState","Flight","Dog","separatePastAndFuture","today","Schedule","schedule","currentDate","showPast","setShowPast","undefined","Object","values","length","date","from","to","search","segments","past","future","title","Date","toLocaleDateString","year","month","day","map","segment","i","stops","arrival","departure","duration","thread","short_title","transport_subtype","tickets_info","places","price","whole"],"sources":["/Users/alligator/Documents/education/projects/sobaki-tesst2/src/features/Schedule/Schedule.tsx"],"sourcesContent":["import React, {FC, memo, useState} from \"react\"\n\nimport {Segment} from \"../../types\";\nimport Flight from \"../../components/Flight/Flight\";\nimport Dog from '../../components/Dog/Dog';\nimport {separatePastAndFuture} from \"../../helpers/separatePastAndFuture\";\nimport {today} from \"../../constants/dates\";\n\n//   https://api.rasp.yandex.net/v3.0/search/?apikey=b4bb1709-f368-422c-9466-87821be7f87c&format=json&from=s9600871&to=s9602460&lang=ru_RU&page=1&date=2022-09-04\n\ninterface Props {\n  schedule: any;\n  currentDate: string;\n  // scheduleStatus: Status;\n}\n\nconst Schedule: FC<Props> = memo(({schedule, currentDate,}) => {\n  // const [pastAndFuture, setPastAndFuture] = useState<{past: Segment[], future: Segment[]}>({past: [], future: []})\n  const [showPast, setShowPast] = useState(false);\n\n\n  if (schedule === undefined || Object.values(schedule).length === 0) {\n    return <Dog/>;\n  }\n\n  // if (scheduleStatus === 'loading') {\n  //   return <Dog />;\n  // }\n\n// todo почитать что не может быть стейтом))\n\n\n  // console.log({schedule})\n  const {date, from, to} = schedule.search;\n\n\n  const {segments} = schedule;\n  const {past, future} = separatePastAndFuture(segments);\n  //???? const options: {year: string, month: string, day: string} = { year: 'numeric', month: 'long', day: 'numeric' }\n\n\n  return (\n    <>\n      {/*<div className={classes.fromTo}>*/}\n        <div>Откуда: {from.title}</div>\n        <div>Куда: {to.title}</div>\n        <div>Когда: {new Date(date).toLocaleDateString('ru-RU', { year: 'numeric', month: 'long', day: 'numeric' })}</div>\n      {/*</div>*/}\n\n      {showPast && past.map((segment: Segment, i: number) => {\n        return (\n          <Flight\n            key={i + \"\"}\n            stops={segment.stops}\n            arrival={segment.arrival}\n            departure={segment.departure}\n            duration={segment.duration}\n            title={segment.thread.short_title}\n            subtype={segment.thread.transport_subtype.title}\n            price={segment.tickets_info?.places[0].price.whole}\n          />\n        )\n      })}\n      {currentDate === today && <button type=\"button\"\n               onClick={() => setShowPast(!showPast)}>{!showPast ? 'Показать ушедние собаки' : 'Скрыть ушедшие собаки'}</button>}\n      {future.map((segment: Segment, i: number) => {\n        return (\n          <Flight\n            key={i + \"\"}\n            stops={segment.stops}\n            arrival={segment.arrival}\n            departure={segment.departure}\n            duration={segment.duration}\n            title={segment.thread.short_title}\n            subtype={segment.thread.transport_subtype.title}\n            price={segment.tickets_info?.places[0].price.whole}\n          />\n        )\n      })}\n    </>\n  )\n})\n\nexport default Schedule\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}