{"ast":null,"code":"var _jsxFileName = \"/Users/alligator/Documents/education/projects/sobaki-tesst2/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { observer } from 'mobx-react';\nimport Finder from './features/Finder/Finder';\nimport './App.css';\nimport Schedule from './features/Schedule/Schedule';\nimport { key } from './constants/key'; // import {bigData} from './features/bigData';\n// import {Simulate} from \"react-dom/test-utils\";\n\nimport axios from \"axios\";\nimport { thnxToYandex } from \"./constants/thnxToYandex\";\nimport Loader from \"./components/Loader/Loader\";\nimport Title from \"./features/Title/Title\";\nimport { today } from \"./constants/dates\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// const url = '/v3.0/stations_list/';\nfunction App() {\n  _s();\n\n  const [params, setParams] = useState({\n    from: \"\",\n    to: \"\"\n  });\n  const [allStations, setAllStations] = useState([]);\n  const [schedule, setSchedule] = useState({});\n  const [tomorrow, setTomorrow] = useState(false);\n  const [currentDate, setCurrentDate] = useState(today); // todo type?\n  // from to\n  // https://api.rasp.yandex.net/v3.0/search/?apikey=b4bb1709-f368-422c-9466-87821be7f87c&format=json&from=s9600871&to=s9602460&lang=ru_RU&page=1&date=2022-09-04\n  // schedules\n  // https://api.rasp.yandex.net/v3.0/stations_list/?direction=на%20Москву&lang=ru_RU&format=json&apikey=b4bb1709-f368-422c-9466-87821be7f87c\n  // https://api.rasp.yandex.net/v3.0/search/?apikey=b4bb1709-f368-422c-9466-87821be7f87c&format=json&from=s9600871&to=s9602460&lang=ru_RU&page=1&date=2022-09-04\n  // на выходе должен получиться массив с объектами такого типа\n  // codes: Object { esr_code: \"191602\", yandex_code: \"s2000001\" };\n  // direction: \"Горьковское\";\n  // latitude: 55.757383;\n  // longitude: 37.660784;\n  // station_type: \"train_station\";\n  // title: \"Москва (Курский вокзал)\";\n  // transport_type: \"train\";\n  //   useEffect(() => {\n  //     axios.get(`/v3.0/stations_list/?direction=на%20Москву&lang=ru_RU&apikey=b4bb1709-f368-422c-9466-87821be7f87c\n  // &transport_types=suburban`)\n  //       .then((res) => console.log(res.data.countries // console.log --  setAllStations\n  //           .find((obj: any) => obj.title === 'Россия').regions\n  //           .find((obj: any) => obj.title === 'Москва и Московская область').settlements\n  //           .map((obj) => obj.title).sort() // 340 нет\n  //         // .find((obj: any) => obj.direction).codes.yandex_code\n  //       ));\n  //   }, []);\n  // old first request\n\n  useEffect(() => {\n    axios.get(`v3.0/stations_list/?direction=на%20Москву&lang=ru_RU&apikey=${key}&transport_types=suburban`) // axios.get(`/v3.0/stations_list/?direction=на%20Москву&lang=ru_RU&format=json&apikey=${key}`)\n    .then(res => setAllStations(res.data.countries // console.log --  setAllStations\n    .find(obj => obj.title === 'Россия').regions //.find((obj: any) => obj.title === 'Москва').settlements\n    .find(obj => obj.title === 'Москва и Московская область').settlements // .find((obj: any) => obj.title === 'Нахабино').stations\n    // .find((obj: any) => obj.direction).codes.yandex_code\n    ));\n  }, []); // useEffect(() => {\n  //   axios.get(`/v3.0/stations_list/?apikey=${key}`)\n  //     .then((res) => console.log(res.data\n  //       //   .countries // console.log --  setAllStations\n  //       // .find((obj: any) => obj.title === 'Россия').regions\n  //       // .find((obj: any) => obj.title === 'Москва и Московская область').settlements\n  //\n  //       // .find((obj: any) => obj.title === 'Нахабино').stations\n  //       // .find((obj: any) => obj.direction).codes.yandex_code\n  //     ));\n  // }, []);\n\n  useEffect(() => {\n    const {\n      from,\n      to\n    } = params;\n\n    if (from !== undefined && to !== undefined && from.length > 0 && to.length > 0) {\n      axios.get(`/v3.0/search/?apikey=${key}&format=json&from=${from}&to=${to}&lang=ru_RU&page=1&date=${currentDate}`).then(res => setSchedule(res.data));\n    }\n  }, [params, currentDate]);\n\n  if (!allStations || allStations.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      tomorrow: tomorrow,\n      setTomorrow: setTomorrow,\n      currentDate: currentDate,\n      setCurrentDate: setCurrentDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Finder, {\n      setParams: setParams,\n      stations: allStations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Schedule, {\n      schedule: schedule\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      style: {\n        position: 'fixed',\n        left: 0,\n        bottom: 0,\n        width: '100%',\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '5px'\n        },\n        children: thnxToYandex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JreHrFq/deUEDbn9KeT5qvUfOfw=\");\n\n_c = App;\nexport default _c2 = observer(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","observer","Finder","Schedule","key","axios","thnxToYandex","Loader","Title","today","App","params","setParams","from","to","allStations","setAllStations","schedule","setSchedule","tomorrow","setTomorrow","currentDate","setCurrentDate","get","then","res","data","countries","find","obj","title","regions","settlements","undefined","length","position","left","bottom","width","textAlign","fontSize"],"sources":["/Users/alligator/Documents/education/projects/sobaki-tesst2/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { observer } from 'mobx-react';\nimport {toJS} from 'mobx';\n\nimport Finder from './features/Finder/Finder';\nimport {Values} from './features/Finder/Finder';\nimport './App.css';\nimport Schedule from './features/Schedule/Schedule';\nimport ScheduleStore from './features/Schedule/ScheduleStore';\nimport {key} from './constants/key';\n// import {bigData} from './features/bigData';\n// import {Simulate} from \"react-dom/test-utils\";\nimport axios from \"axios\";\nimport {thnxToYandex} from \"./constants/thnxToYandex\";\nimport {makeUnique} from \"./helpers/makeUnique\";\nimport Loader from \"./components/Loader/Loader\";\nimport Title from \"./features/Title/Title\";\nimport {Settlement} from \"./types\";\nimport {findYaCodes} from \"./helpers/findYaCodes\";\nimport {findYaCode} from \"./helpers/findYaCode\";\nimport moment from \"moment\";\nimport {today, tomorrow} from \"./constants/dates\";\n\nexport interface Params {\n  from: string;\n  to: string;\n}\n\n// const url = '/v3.0/stations_list/';\n\n\nfunction App() {\n  const [params, setParams] = useState<Params>({from: \"\", to: \"\"})\n\n  const [allStations, setAllStations] = useState<Settlement[]>([]);\n\n  const [schedule, setSchedule] = useState({});\n\n  const [tomorrow, setTomorrow] = useState(false);\n  const [currentDate, setCurrentDate] = useState<string>(today); // todo type?\n\n  // from to\n  // https://api.rasp.yandex.net/v3.0/search/?apikey=b4bb1709-f368-422c-9466-87821be7f87c&format=json&from=s9600871&to=s9602460&lang=ru_RU&page=1&date=2022-09-04\n  // schedules\n  // https://api.rasp.yandex.net/v3.0/stations_list/?direction=на%20Москву&lang=ru_RU&format=json&apikey=b4bb1709-f368-422c-9466-87821be7f87c\n\n  // https://api.rasp.yandex.net/v3.0/search/?apikey=b4bb1709-f368-422c-9466-87821be7f87c&format=json&from=s9600871&to=s9602460&lang=ru_RU&page=1&date=2022-09-04\n\n  // на выходе должен получиться массив с объектами такого типа\n  // codes: Object { esr_code: \"191602\", yandex_code: \"s2000001\" };\n  // direction: \"Горьковское\";\n  // latitude: 55.757383;\n  // longitude: 37.660784;\n  // station_type: \"train_station\";\n  // title: \"Москва (Курский вокзал)\";\n  // transport_type: \"train\";\n\n\n//   useEffect(() => {\n//     axios.get(`/v3.0/stations_list/?direction=на%20Москву&lang=ru_RU&apikey=b4bb1709-f368-422c-9466-87821be7f87c\n// &transport_types=suburban`)\n//       .then((res) => console.log(res.data.countries // console.log --  setAllStations\n//           .find((obj: any) => obj.title === 'Россия').regions\n//           .find((obj: any) => obj.title === 'Москва и Московская область').settlements\n//           .map((obj) => obj.title).sort() // 340 нет\n//         // .find((obj: any) => obj.direction).codes.yandex_code\n//       ));\n//   }, []);\n\n  // old first request\n  useEffect(() => {\n    axios.get(`v3.0/stations_list/?direction=на%20Москву&lang=ru_RU&apikey=${key}&transport_types=suburban`)\n    // axios.get(`/v3.0/stations_list/?direction=на%20Москву&lang=ru_RU&format=json&apikey=${key}`)\n      .then((res) => setAllStations(res.data.countries // console.log --  setAllStations\n        .find((obj: any) => obj.title === 'Россия').regions\n        //.find((obj: any) => obj.title === 'Москва').settlements\n        .find((obj: any) => obj.title === 'Москва и Московская область').settlements\n\n        // .find((obj: any) => obj.title === 'Нахабино').stations\n        // .find((obj: any) => obj.direction).codes.yandex_code\n      ));\n  }, []);\n\n  // useEffect(() => {\n  //   axios.get(`/v3.0/stations_list/?apikey=${key}`)\n  //     .then((res) => console.log(res.data\n  //       //   .countries // console.log --  setAllStations\n  //       // .find((obj: any) => obj.title === 'Россия').regions\n  //       // .find((obj: any) => obj.title === 'Москва и Московская область').settlements\n  //\n  //       // .find((obj: any) => obj.title === 'Нахабино').stations\n  //       // .find((obj: any) => obj.direction).codes.yandex_code\n  //     ));\n  // }, []);\n\n\n  useEffect(() => {\n    const {from, to} = params;\n\n    if (from !== undefined && to !== undefined && from.length > 0 && to.length > 0) {\n      axios.get(`/v3.0/search/?apikey=${key}&format=json&from=${from}&to=${to}&lang=ru_RU&page=1&date=${currentDate}`)\n        .then((res) => setSchedule(res.data))\n    }\n  }, [params, currentDate])\n\n  if (!allStations || allStations.length === 0) {\n    return <Loader />\n  }\n\n  return (\n    <div className=\"App\">\n      <Title tomorrow={tomorrow} setTomorrow={setTomorrow} currentDate={currentDate} setCurrentDate={setCurrentDate}/>\n      <Finder\n        setParams={setParams}\n        stations={allStations}\n      />\n      <Schedule schedule={schedule} />\n      <footer\n        style={{\n          position: 'fixed',\n          left: 0,\n          bottom: 0,\n          width: '100%',\n          textAlign: 'center',\n        }}\n      >\n        <p style={{fontSize: '5px'}}>{thnxToYandex}</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default observer(App);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}